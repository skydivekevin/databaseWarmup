'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _path = require('path');

var _glob = require('glob');

var _glob2 = _interopRequireDefault(_glob);

var _fsExtra = require('fs-extra');

var _fsExtra2 = _interopRequireDefault(_fsExtra);

var _chalk = require('chalk');

var _chalk2 = _interopRequireDefault(_chalk);

var _ora = require('ora');

var _ora2 = _interopRequireDefault(_ora);

var _del = require('del');

var _del2 = _interopRequireDefault(_del);

var _postcss = require('./postcss');

var _postcss2 = _interopRequireDefault(_postcss);

var _webpack = require('./webpack');

var _webpack2 = _interopRequireDefault(_webpack);

var _serve = require('./serve');

var _config = require('./config');

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } /* eslint-disable unicorn/no-process-exit */


var cwd = process.cwd();

exports.default = async function build() {
	var spinner = (0, _ora2.default)('Commencing build...').start();

	// Remove previous build completely before production build
	if (process.env.NODE_ENV === 'production') {
		(0, _del2.default)((0, _path.join)(cwd, '.expressx/build'));
	}

	try {
		await (0, _serve.initialTranspile)();
	} catch (e) {
		spinner.stop();
		(0, _serve.handleBabelError)(e);
	}

	var ignoredFiles = [];
	if (process.env.NODE_ENV !== 'production' && _config2.default.babel.ignore.length > 0) {
		spinner.text = 'This might take a few moments...';
		_config2.default.babel.ignore.forEach(function (g) {
			ignoredFiles = [].concat(_toConsumableArray(ignoredFiles), _toConsumableArray(_glob2.default.sync((0, _path.join)(cwd, g))));
		});
	}

	try {
		await (0, _postcss2.default)();
	} catch (e) {
		(0, _serve.handleStylesError)(e);
	}

	if (_config2.default.webpackMode === 'direct') {
		try {
			if (!_config2.default.disableWebpack) await (0, _webpack2.default)();
		} catch (e) {
			(0, _serve.handleWebpackError)(e);
		}
	}

	await _fsExtra2.default.copy((0, _path.join)(cwd, _config2.default.staticFolder), (0, _path.join)(cwd, '.expressx/build/' + _config2.default.staticFolder));

	await (0, _serve.cleanupStatic)();

	spinner.stop();
	console.log();
	console.log(_chalk2.default.bgGreen.black(' DONE '), _chalk2.default.green('Build successful!'));
	console.log();
	console.log('> Use "' + _chalk2.default.cyan.bold('expressx start') + '" to start the app.');
	console.log();

	process.exit(0);
};